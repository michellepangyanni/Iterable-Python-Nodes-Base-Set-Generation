package main.rice.node;

import main.rice.obj.AIterablePyObj;
import main.rice.obj.APyObj;

/**
 * An abstract class whose instances represent generators of iterable Python objects.
 *
 * @param <InnerType> the type of object generated by the leftChild node, which represents
 *                    the type of elements in this iterable object; if we call
 *                    this.leftChild.genExVals(), it will return a Set<InnerType>
 */
public abstract class AIterablePyNode<OuterType extends AIterablePyObj<InnerType>,
        InnerType extends APyObj> extends APyNode<OuterType> {
    // TODO: implement the abstract AIterablePyNode class here
}